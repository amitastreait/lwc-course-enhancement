# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
 paths:
  include:
    - force-app/main/default/*
 branches:
  include:
    - main
    - release/*
    - azure-pipelines

variables:
 - ${{ if eq(variables['Build.SourceBranch'], 'main') }}:
    - group: salesforce-prod-credentials
  - ${{ if eq(variables['Build.SourceBranch'], 'azure-pipelines') }}:
    - group: salesforce-credentials

pr:
 paths:
  include:
    - force-app/main/default/*
 branches:
   include:
    - main
    - release/*
    - azure-pipelines

pool:
  vmImage: ubuntu-latest
  
stages:

  - stage: Build
    jobs:
    - job: BuildJob
      steps:
      - script: echo Building!

  - stage: Test
    jobs:
    - job: TestOnWindows
      steps:
      - script: echo Testing on Windows!
    - job: TestOnLinux
      steps:
      - script: echo Testing on Linux!
    - job: ConnectWithSalesforce
      steps:
        - checkout: self
          fetchDepth: 0
        - task: DownloadSecureFile@1
          name: openSSLCertificate
          inputs:
            secureFile: 'server.key'
        - script: npm install
          displayName: Install the NPM
        - script: npm install @salesforce/cli --global
          displayName: Install the new Salesforce CLI
        - script: sf --version
          displayName: check the SF Version
        - script: openssl enc -nosalt -aes-256-cbc -d -in $(ENCRYPTION_KEY_FILE) -out $(JWT_KEY_FILE) -base64 -K $(DECRYPTION_KEY) -iv $(DECRYPTION_IV)
          displayName: Convert the Encrypted file to the correct key file
        - script: sf org login jwt --client-id $(SFDC_CLIENT_ID) --jwt-key-file  $(JWT_KEY_FILE) --username $(SFDC_USER_NAME) --set-default --alias HubOrg --instance-url $(SFDC_LOGIN_URL)
          displayName: Connect with Salesforce Org
        - script: sf project deploy start --source-dir force-app --target-org HubOrg --coverage-formatters clover
          displayName: Deploy the Code to Salesforce Org
        - script: echo y | sf plugins install sfdx-git-delta
          displayName: Install the SFDX Git delta package
        - script: mkdir delta
          displayName: Create delta folter
        - script: sf sgd source delta --from HEAD^ --output "./delta" --ignore-whitespace --generate-delta
          displayName: find the difference in the code base
        - script: cat delta/package/package.xml
          displayName: display the content of the packge.xml
      
  - stage: Deploy
    jobs:
    - job: Deploy
      steps:
      - script: echo Deploying the code!
      - script: npm install
      - script: npm install @salesforce/cli --global
      - script: sf --version
